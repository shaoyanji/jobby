version: "3"

vars:
  TEMP_DIR: ./tmp
  OUTPUT_DIR: ./output
  TEMPLATE_DIR: ./src
  TEMPLATE_LATEX: ./src/lib/letter.latex
  ENC_HEADER_LETTER_YAML: ./src/letter.enc.yaml
  HEADER_LETTER_YAML: ./tmp/letter.yaml
  LETTER_MD: ./src/letter.md
  ENC_HEADER_RESUME_YAML: ./src/resume.enc.yaml
  HEADER_RESUME_YAML: ./tmp/resume.yaml
  # RESUME_MD: ./src/resume.md
  # RESUME_EN_MD: ./src/resume-en.md
  CSS_FILE: ./src/lib/resume-stylesheet.css
  BIN: ./src/bin
  SHRINK_PDF: ./src/bin/shrinkpdf.sh
  FILE_SIZE: stat -c%s
  PROFILE: ./src/assets/profile.jpg
  SIGNATURE: ./src/assets/signature.png
menu:
  ui:
    - refresh
    - tgpt2
    #    - pbpaste-letter
    - generateletter
    - generatecv
    - generatecv-en
    #    - make-pdf-map
    - compress-assets
    #    - edit
    # - clean
    - update-sops
    - git-clean-push
    - exit
  edit:
    - back-to-task
    - edit-letter
    - edit-resume
    - edit-letter-secrets
    - edit-resume-secrets
    - exit
tasks:
  default:
    cmds:
      - task $(cat Taskfile.yml | yq .menu.ui.[] | fzf)
    #      - task $(cat Taskfile.yml | yq '.tasks | keys | .[]' | fzf --height 50%)
    silent: true
  #  update-date:
  #    cmds:
  #    - nu {{.BIN}}/update-date.nu
  make-pdf-map:
    cmds:
      - mkdir -p {{.TEMP_DIR}}
      - sops -d {{.TEMPLATE_DIR}}/resume-map.enc.yaml > {{.TEMP_DIR}}/resume-map.yaml
      - nu {{.BIN}}/resume-map.nu
      - ({{.BIN}}/resume-map.nu && viu {{.PROFILE}} -w 20 -x 260 -ay 8 && viu {{.SIGNATURE}} -w 40 -x 250 -ay 65)
      #- nu {{.BIN}}/resume-map.nu | freeze -o {{.OUTPUT_DIR}}/resume-map.png --language text
      #- magick {{.OUTPUT_DIR}}/resume-map.png {{.OUTPUT_DIR}}/resume-map.pdf
      #- pdfcpu optimize {{.OUTPUT_DIR}}/resume-map.pdf
      #- mupdf {{.OUTPUT_DIR}}/resume-map.pdf
  make-pdf-map-de:
    cmds:
      - mkdir -p {{.TEMP_DIR}}
      - sops -d {{.TEMPLATE_DIR}}/resume-map-de.enc.yaml > {{.TEMP_DIR}}/resume-map-de.yaml
      #- nu {{.BIN}}/resume-map-de.nu
      #- ({{.BIN}}/resume-map-de.nu && viu {{.PROFILE}} -w 20 -x 260 -ay 8 && viu {{.SIGNATURE}} -w 40 -x 250 -ay 65)
      - nu {{.BIN}}/resume-map-de.nu | freeze -o {{.OUTPUT_DIR}}/resume-map-de.png --language text
      - magick {{.OUTPUT_DIR}}/resume-map-de.png {{.OUTPUT_DIR}}/resume-map-de.pdf
      - pdfcpu optimize {{.OUTPUT_DIR}}/resume-map-de.pdf
      - mupdf {{.OUTPUT_DIR}}/resume-map-de.pdf
  refresh:
    cmds:
      - sops src/assets/letter.enc.yaml
      - $SOPS_EDITOR local/template.yaml
  tgpt2:
    vars:
      TGPT: tgpt -q --provider groq --model deepseek-r1-distill-llama-70b --key $(cat src/.config/groqkey.age | age -d -i src/.config/sops/age/keys.txt)
    cmds:
      - sops -d src/assets/resume-map.enc.yaml | {{.TGPT}} "$(cat local/template.yaml && wl-paste)"| src/bin/detxtwrap.sh  > unenc/letter.md
      - task encrypt
      - task generateletter
  # tgpt:
  #   cmds:
  #     - mkdir -p {{.TEMP_DIR}}
  #     - $EDITOR {{.TEMP_DIR}}/tgpt.md
  #     - cat {{.TEMP_DIR}}/tgpt.md | tgpt
  pbpaste-letter:
    cmds:
      - pbpaste > {{.LETTER_MD}}
      - task edit-letter
      - task edit-letter-secrets # make a form to sops set the three edit values
      - task generateletter
  generatecv-en:
    cmds:
      - cat ./local/resume-header.md > ./unenc/resume.md
      - cat ./local/resume-experience.md >> ./unenc/resume.md
      - cat ./local/resume-skills.md >> ./unenc/resume.md
      - cat ./local/resume-education.md >> ./unenc/resume.md
      - task encrypt
      - task generatecv
  generateletter:
    cmds:
      - echo "Generating letter"
      - nix build .#letter |& nom
      #- mupdf result/final.pdf
      - cp result/final.pdf tmp/coverletter.pdf
      - chmod 777 tmp/coverletter.pdf
    silent: true
  keygen:
    cmds:
      - mkdir -p src/.config/sops/age
      - age-keygen -o src/.config/sops/age/keys.txt
  encrypt:
    cmds:
      # - cp local/* unenc
      - tar cvz unenc | age -r age1vhtfwwnpqr3tu3sftsggsvdlqhmtl02y30ggp9faj8g65x4dgs3shx7j2e> src/assets/enc.tar.gz.age
  decrypt:
    cmds:
      - age --decrypt -i ./src/.config/sops/age/keys.txt src/assets/enc.tar.gz.age > unenc.tar.gz
      - tar -xzf unenc.tar.gz
      # - cp unenc/* local
      - rm unenc.tar.gz
  generatecv:
    cmds:
      - echo "Generating CV"
      - nix build .#cv |& nom
      #- mupdf result/final.pdf
      - cp result/final.pdf tmp/cv.pdf
      - chmod 777 tmp/cv.pdf
    silent: true

  compress-assets:
    cmds:
      - echo "Compressing assets"
      - mkdir -p {{.OUTPUT_DIR}}/src/assets
      - mkdir -p {{.TEMP_DIR}}/src/assets
      - cp -r src/assets/* {{.TEMP_DIR}}/src/assets
      - task compress-pdf
      - task optimize-pdf
      - echo "Assets Compressed at {{.OUTPUT_DIR}}/src/assets"
  compress-pdf:
    vars:
      PDF_NAME:
        sh: find src -type f -name '*.pdf'
    cmds:
      - for: { var: PDF_NAME }
        cmd: ./{{.SHRINK_PDF}} {{.TEMP_DIR}}/{{.ITEM}}  {{.OUTPUT_DIR}}/{{.ITEM}}
  optimize-pdf:
    vars:
      PDF_NAME:
        sh: find src -type f -name '*.pdf'
    cmds:
      - for: { var: PDF_NAME }
        cmd: pdfcpu optimize '{{.OUTPUT_DIR}}/{{.ITEM}}'
  back-to-task:
    cmds:
      - task
  edit:
    cmds:
      - task $(cat Taskfile.yml | yq .menu.edit.[] | gum choose)
  edit-letter:
    cmds:
      - $EDITOR {{.LETTER_MD}}
    silent: true
  edit-resume:
    cmds:
      - $EDITOR {{.RESUME_MD}}
    silent: true
  edit-letter-secrets:
    cmds:
      - sops edit {{.ENC_HEADER_LETTER_YAML}}
    silent: true
  edit-resume-secrets:
    cmds:
      - sops edit {{.ENC_HEADER_RESUME_YAML}}
    silent: true
  # clean:
  #   cmds:
  #     - rm -rf {{.TEMP_DIR}} && mkdir -p {{.TEMP_DIR}}
  update-sops:
    cmds:
      - sops updatekeys {{.TEMPLATE_DIR}}/assets/*.enc.yaml
  git-clean-push:
    cmds:
      - git add .
      - git restore --staged src/.config
      - 'git commit -m "chore: cleaning repo"'
      - git push
      - git add .
  exit:
    cmds:
      - exit
